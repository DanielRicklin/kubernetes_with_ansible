- hosts: master
  become: yes
  gather_facts: false

  vars:
    USER: {{ USER }}

  tasks:
    - name: Install Python
      apt:
        name: python3
        state: present

    - name: Install Pip
      apt:
        name: python3-pip
        state: present

    - name: Create .bash_aliases
      ansible.builtin.file:
        path: "/home/{{ USER }}/.bash_aliases"
        state: touch
        mode: '0644'

    - name: Alias python3 as python
      lineinfile:
        path: "/home/{{ USER }}/.bash_aliases"
        line: alias python='python3'

    - name: Reboot
      reboot:

    - name: Install kubernetes python library
      pip:
        name: kubernetes
        state: present
        extra_args: --break-system-packages

    - name: Install Kubectl
      apt:
        name: kubectl=1.29.*
        state: present
        force: yes

    - name: Create an Empty file for Kubeadm configuring
      copy:
        content: ""
        dest: /etc/kubernetes/kubeadm-config.yaml
        force: no

    - name: Configure container runtime
      blockinfile:
        path: /etc/kubernetes/kubeadm-config.yaml
        block: |
          kind: ClusterConfiguration
          apiVersion: kubeadm.k8s.io/v1beta3
          networking:
            podSubnet: "10.244.0.0/16"
          ---
          kind: KubeletConfiguration
          apiVersion: kubelet.config.k8s.io/v1beta1
          runtimeRequestTimeout: "15m"
          cgroupDriver: "systemd"
          systemReserved:
            cpu: 100m
            memory: 350M
          kubeReserved:
            cpu: 100m
            memory: 50M
          enforceNodeAllocatable:
          - pods

    - name: Initialize the cluster
      shell: kubeadm init --config /etc/kubernetes/kubeadm-config.yaml >> cluster_initialized.log
      args:
        chdir: "/home/{{ USER }}"
        creates: cluster_initialized.log

    - name: Create .kube directory
      become: yes
      become_user: "{{ USER }}"
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    - name: Copy admin.conf to User's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "/home/{{ USER }}/.kube/config"
        remote_src: yes
        owner: {{ USER }}

    - name: Install Pod Network
      become: yes
      become_user: "{{ USER }}"
      shell: kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml >> pod_network_setup.log
      args:
        chdir: $HOME
        creates: pod_network_setup.log